/* (c) https://github.com/MontiCore/monticore */

package mc.examples.automaton;

grammar Automaton extends mc.grammar.lexicals.ItTestLexicals {

symbol scope Automaton =
  "automaton" Name "{" (State | Transition)* (bla:Name) ?"}" ;

/** A ASTState represents a state of a finite automaton
    @attribute Name Name of state
    @attribute start True if state is start state
    @attribute final True if state is a final state
    @attribute States List of states
    @attribute Transitions List of transitions
*/
symbol scope State =
  "state" Name
  
  (("<<" ["initial"] ">>" ) | ("<<" ["final"] ">>" ))*
  
  ( ("{" (State | Transition)* "}") | ";") ;


/** A ASTTransition represents a transition
    @attribute From Name of the state from which the transitions starts
    @attribute Activate Activation signal for this transition
    @attribute To Name of the state to which the transitions goes
*/ 
Transition =
  from:Name "-" activate:Name ">" to:Name ";" ;
  
}
