/* (c) https://github.com/MontiCore/monticore */

package mc.feature.comments;

grammar CommentTypesTest extends mc.common.Basics { 


  token XML_COMMENT =
    "<!--" ({_input.LA(2) != '/'}?'*' |
     NEWLINE |
      ~('*' |
      '\n' |
      '\r' )
    )*
    "-->" : {_channel = HIDDEN;
    if (getCompiler() != null) {
      de.monticore.ast.Comment _comment = new de.monticore.ast.Comment(getText());
      _comment.set_SourcePositionStart(new de.se_rwth.commons.SourcePosition(getLine(), getCharPositionInLine()));
      _comment.set_SourcePositionEnd(getCompiler().computeEndPosition(getToken()));
      getCompiler().addComment(_comment);
  }};

  token HASH_COMMENT = '#' (~('\n'|'\r'))*  : {_channel = HIDDEN;
    if (getCompiler() != null) {
      de.monticore.ast.Comment _comment = new de.monticore.ast.Comment(getText());
      _comment.set_SourcePositionStart(new de.se_rwth.commons.SourcePosition(getLine(), getCharPositionInLine()));
      _comment.set_SourcePositionEnd(getCompiler().computeEndPosition(getToken()));
      getCompiler().addComment(_comment);
  }};


  token TEX_COMMENT =   '%' (~('\n'|'\r'))* : {_channel = HIDDEN;
    if (getCompiler() != null) {
      de.monticore.ast.Comment _comment = new de.monticore.ast.Comment(getText());
      _comment.set_SourcePositionStart(new de.se_rwth.commons.SourcePosition(getLine(), getCharPositionInLine()));
      _comment.set_SourcePositionEnd(getCompiler().computeEndPosition(getToken()));
      getCompiler().addComment(_comment);
  }};
  
  token FREEMARKER_COMMENT = "<#--" (  { _input.LA(2)!='-' || ((_input.LA(2)=='-') && (_input.LA(3)!='>')) }?
   '-'| NEWLINE |~('-'|'\n'|'\r'))* "-->" : {_channel = HIDDEN;
    if (getCompiler() != null) {
      de.monticore.ast.Comment _comment = new de.monticore.ast.Comment(getText());
      _comment.set_SourcePositionStart(new de.se_rwth.commons.SourcePosition(getLine(), getCharPositionInLine()));
      _comment.set_SourcePositionEnd(getCompiler().computeEndPosition(getToken()));
      getCompiler().addComment(_comment);
  }}; 
  
  CStart = "start" A;

  A = Name;
}
