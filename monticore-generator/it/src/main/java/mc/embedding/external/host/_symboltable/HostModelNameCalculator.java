/* (c) https://github.com/MontiCore/monticore */

/* generated from model null*/
/* generated by template symboltable.ModelNameCalculator*/




package mc.embedding.external.host._symboltable;

import java.util.Collections;
import java.util.Set;

import com.google.common.collect.ImmutableSet;
import de.monticore.symboltable.SymbolKind;

public class HostModelNameCalculator extends de.monticore.CommonModelNameCalculator {

  @Override
  public Set<String> calculateModelNames(final String name, final SymbolKind kind) {
    if (ContentSymbol.KIND.isKindOf(kind)) {
      return calculateModelNameForContent(name);
    }
    if (HostSymbol.KIND.isKindOf(kind)) {
      return calculateModelNameForHost(name);
    }

    return Collections.emptySet();
  }

  protected Set<String> calculateModelNameForContent(String name) {
    return ImmutableSet.of(name);
  }
  protected Set<String> calculateModelNameForHost(String name) {
    return ImmutableSet.of(name);
  }


}
