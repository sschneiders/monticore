/* (c) https://github.com/MontiCore/monticore */

/* generated from model null*/
/* generated by template symboltable.ModelingLanguage*/




package mc.embedding.transitive.transcomposite._symboltable;

import de.monticore.EmbeddingModelingLanguage;
import de.monticore.symboltable.MutableScope;
import de.monticore.symboltable.ResolvingConfiguration;
import mc.embedding.composite._symboltable.CompositeLanguage;
import mc.embedding.transitive.transcomposite._parser.TransCompositeParser;
import mc.embedding.transitive.transhost._symboltable.TransHostLanguage;

import java.util.Optional;

public class TransCompositeLanguage extends EmbeddingModelingLanguage {

  public TransCompositeLanguage() {
    super("Trans Composite Language", TransHostLanguage.FILE_ENDING, new TransHostLanguage(), new CompositeLanguage());

    modelLoader =  provideModelLoader();
    initResolvingFilters();
  }

  @Override
  public TransCompositeParser getParser() {
    return new TransCompositeParser();
  }


  @Override
  public TransCompositeModelLoader getModelLoader() {
    return (TransCompositeModelLoader) super.getModelLoader();
  }

  //@Override
  //protected TransCompositeModelLoader provideModelLoader() {
  //  return new TransCompositeModelLoader(this);
  //}

  protected void initResolvingFilters() {
  }

  /**
   * @see de.monticore.ModelingLanguage#getSymbolTableCreator(ResolvingConfiguration, de.monticore.symboltable.MutableScope)
   */
  @Override
  public Optional<TransCompositeSymbolTableCreator> getSymbolTableCreator(
      ResolvingConfiguration resolvingConfiguration, MutableScope enclosingScope) {
    return Optional.of(new TransCompositeSymbolTableCreator(resolvingConfiguration, enclosingScope));
  }

  /**
   * @see de.monticore.CommonModelingLanguage#provideModelLoader()
   */
  @Override
  protected TransCompositeModelLoader provideModelLoader() {
    return new TransCompositeModelLoader(this);
  }
}
