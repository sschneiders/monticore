/* (c) https://github.com/MontiCore/monticore */

/* generated from model null*/
/* generated by template symboltable.SymbolTableCreator*/




package mc.embedding.transitive.transhost._symboltable;

import de.monticore.symboltable.MutableScope;
import de.monticore.symboltable.ResolvingConfiguration;
import mc.embedding.transitive.transhost._ast.ASTTransStart;
import mc.embedding.transitive.transhost._visitor.TransHostVisitor;

import java.util.Deque;

public class TransHostSymbolTableCreator extends TransHostSymbolTableCreatorTOP {

  private TransHostVisitor realThis = this;
  
  public TransHostSymbolTableCreator(
    final ResolvingConfiguration resolverConfig, final MutableScope enclosingScope) {
    super(resolverConfig, enclosingScope);
  }

  public TransHostSymbolTableCreator(final ResolvingConfiguration resolverConfig, final Deque<MutableScope> scopeStack) {
    super(resolverConfig, scopeStack);
  }

  /**
   * @see mc.embedding.transitive.transhost._visitor.TransHostVisitor#visit(mc.embedding.transitive.transhost._ast.ASTTransStart)
   */
  @Override
  public void visit(ASTTransStart node) {
    TransStartSymbol symbol = new TransStartSymbol(node.getName());
    addToScopeAndLinkWithNode(symbol, node);
  }
  
  /**
   * @see mc.embedding.transitive.transhost._visitor.TransHostVisitor#setRealThis(mc.embedding.transitive.transhost._visitor.TransHostVisitor)
   */
  @Override
  public void setRealThis(TransHostVisitor realThis) {
    this.realThis = realThis;
  }
  /**
   * @see mc.embedding.transitive.transhost._visitor.TransHostVisitor#getRealThis()
   */
  @Override
  public TransHostVisitor getRealThis() {
    return realThis;
  }

}
