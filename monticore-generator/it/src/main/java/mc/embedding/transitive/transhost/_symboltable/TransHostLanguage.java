/* (c) https://github.com/MontiCore/monticore */

/* generated from model null*/
/* generated by template symboltable.ModelingLanguage*/




package mc.embedding.transitive.transhost._symboltable;

import de.monticore.symboltable.MutableScope;
import de.monticore.symboltable.ResolvingConfiguration;

import java.util.Optional;

public class TransHostLanguage extends TransHostLanguageTOP {

  public final static String FILE_ENDING = "transhost";
  public TransHostLanguage() {
    super("Trans Host Language", FILE_ENDING);
  }

  @Override
  public Optional<TransHostSymbolTableCreator> getSymbolTableCreator(
      ResolvingConfiguration resolvingConfiguration, MutableScope enclosingScope) {
    return Optional.of(new TransHostSymbolTableCreator(resolvingConfiguration, enclosingScope));
  }

  @Override
  public TransHostModelLoader getModelLoader() {
    return (TransHostModelLoader) super.getModelLoader();
  }

  //@Override
  //protected TransHostModelLoader provideModelLoader() {
  //  return new TransHostModelLoader(this);
  //}

  protected void initResolvingFilters() {
    addResolvingFilter(new TransHostResolvingFilter());
    addResolvingFilter(new TransStartResolvingFilter());
  }

  /**
   * @see de.monticore.CommonModelingLanguage#provideModelLoader()
   */
  @Override
  protected TransHostModelLoader provideModelLoader() {
    return new TransHostModelLoader(this);
  }
}
